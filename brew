#!/bin/sh

pp() {
  local fmt="$1"; shift
  printf "\n$fmt\n" "$@"
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

case "$SHELL" in
  */zsh) : ;;
  *)
    pp "Changing your shell to zsh..."
      chsh -s "$(which zsh)"
    ;;
esac

brew() {
  if is_installed "$1"; then
    if is_upgradable "$1"; then
      pp "Upgrading %s ..." "$1"
      command brew upgrade "$@"
    else
      pp "Already using the latest version of %s. Skipping..." "$1"
    fi
  else
    pp "Installing %s..." "$1"
    command brew install "$@"
  fi
}

is_installed() {
  local name="$(expand_alias "$1")"
  command brew list -1 | grep -Fqx "$name"
}

is_upgradable() {
  local name="$(expand_alias "$1")"
  ! command brew outdated --quiet "$name" >/dev/null
}

tap() {
  command brew tap "$1" 2> /dev/null
}

expand_alias() {
  command brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

# FIXME: This doesn't work if package is up to date
gem() {
  if command gem list "$1" --installed > /dev/null; then
    pp "Updating %s..." "$1"
    command gem update "$1"
  else
    pp "Installing %s..." "$1"
    command gem install "$@"
  fi
}

if ! command -v brew >/dev/null; then
  pp "Installing Homebrew..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby
    export PATH="/usr/local/bin:$PATH"
else
  pp "Homebrew already installed. Skipping..."
fi

pp "Updating Homebrew formulas..."
command brew update

pp "Installing development tools..."
brew 'coreutils'
brew 'git'
brew 'postgresql@13'
brew 'mysql'
tap 'jhawthorn/fzy'
brew 'fzy'
brew 'the_silver_searcher'
brew 'vim'
brew 'ctags'
brew 'tmux'
brew 'imagemagick'
brew 'node'
brew 'openssl'
brew 'libyaml'

# Nokogiri deps
brew 'libxml2'
brew 'libxslt'

# Setup Terminus font
tap 'homebrew/cask-fonts'
brew 'font-terminus'

# Setup Ruby
brew 'chruby'
brew 'ruby-install'

pp "Installing Ruby..."
# TODO: Setup the current stable version as default by writing it to
# $HOME/.ruby-version
ruby-install ruby --no-reinstall

if [ Darwin = `uname` ]; then
  source /opt/homebrew/opt/chruby/share/chruby/chruby.sh
  source /opt/homebrew/opt/chruby/share/chruby/auto.sh
else
  source /usr/local/share/chruby/chruby.sh
  source /usr/local/share/chruby/auto.sh
fi
chruby ruby # FIXME: this probably won't select the right one if > 1

# Personal tools
pp "Installing personal packages..."

# Gems
gem 'teamocil'
gem 'gist'
gem 'ripper-tags'

pp "Configuring Bundler..."
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $(expr $number_of_cores - 1)

if [ -f "$HOME/.laptop.local" ]; then
  . "$HOME/.laptop.local"
fi
